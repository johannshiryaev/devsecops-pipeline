name: Security Scan Pipeline

on:
  push:
    branches-ignore:
      - l10n_develop
      - gh-pages
    tags-ignore:
      - '*'
  pull_request:
    types:
      - opened
      - synchronize

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_ORG: johannshiryaev
  PROJECT_KEY: johannshiryaev_devsecops-pipeline

jobs:
  security-check:
    runs-on: ubuntu-latest

    services:
      juice-shop:
        image: bkimminich/juice-shop
        ports:
          - "3000:3000"

    steps:
      - name: "Checkout OWASP Juice Shop"
        uses: actions/checkout@v4
        with:
          repository: owasp-juice-shop/juice-shop
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Create reports directory
        run: mkdir -p reports

      - name: "Run Gitleaks scan"
        run: |
          docker run --rm -v $(pwd):/src ghcr.io/gitleaks/gitleaks detect --source /src --no-git --report-format sarif \
          --report-path /src/reports/gitleaks-report.sarif --exit-code=0

      - name: Upload Gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: reports/gitleaks-report.sarif

      - name: Upload Gitleaks SARIF
        uses: github/codeql-action@v2
        with:
          upload: true
          sarif_file: reports/gitleaks-report.sarif    

      - name: "Build SBOM with Trivy"
        run: |
          docker run --rm \
            -v $(pwd):/app \
            ghcr.io/aquasecurity/trivy:latest \
            fs --format cyclonedx --output /app/reports/sbom.json /app

      - name: "Scan SBOM with Trivy"
        run: |
          docker run --rm \
            -v $(pwd):/app \
            ghcr.io/aquasecurity/trivy:latest \
            sbom /app/reports/sbom.json \
            -f json -o /app/reports/trivy-sbom.json

      - name: Upload Trivy SARIF
        uses: github/codeql-action@v2
        with:
          upload: true
          sarif_file: reports/trivy-sbom.sarif

      - name: "Static analysis with SonarQube"
        run: |
          docker run --rm \
            -v $(pwd):/src \
            sonarsource/sonar-scanner-cli \
            -Dsonar.projectKey=${{ env.PROJECT_KEY }} \
            -Dsonar.token=${{ env.SONAR_TOKEN }} \
            -Dsonar.organization=${{ env.SONAR_ORG }} \
            -Dsonar.sources=/src \
            -Dsonar.projectBaseDir=/src \
            -Dsonar.host.url=https://sonarcloud.io    

      - name: "Dynamic analysis with OWASP ZAP"
        run: |
          docker run --rm \
            --network host \
            -v $(pwd):/zap/wrk \
            -u root \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://localhost:3000 \
            -r zap-report.html || true

      - name: Convert ZAP XML to SARIF
        uses: owasp-ltd/ghas-sarif@v1
        with:
          tool_name: "OWASP ZAP"
          tool_output_file: "reports/zap-warnings.xml"
          sarif_output_file: "reports/zap-report.sarif"

      - name: Upload SARIF to GitHub
        uses: github/codeql-action@v2
        with:
          upload: true
          sarif_file: "reports/zap-report.sarif"      

      - name: "Upload reports"
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/